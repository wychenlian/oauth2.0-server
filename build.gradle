buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'io.github.robwin:jgitflow-gradle-plugin:0.5.0'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4+'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

repositories {
    jcenter()
    mavenLocal()
}

ext {
    apacheCommonsLang3Version = '3.6'
}

group = 'com.hybris.caas'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}"
    compile 'net.logstash.logback:logstash-logback-encoder:4.11'
    compile("org.apache.oltu.oauth2:org.apache.oltu.oauth2.authzserver:0.31")
    compile("org.apache.oltu.oauth2:org.apache.oltu.oauth2.resourceserver:0.31")
    compile('com.sap.hcp.cf.logging:cf-java-logging-support-servlet:2.1.1')
    compile('com.sap.hcp.cf.logging:cf-java-logging-support-logback:2.1.1')
    compile('com.sap.hcp.cf.logging:cf-java-logging-support-core:2.1.1')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok:1.16.18'
}

compileJava {
    options.compilerArgs << '-parameters'
}

test {
    systemProperties System.properties
}

task unitTest(type: Test) {
    exclude '**/*IntegrationTest*'
}

task integrationTest(type: Test) {
    systemProperties System.properties
    include '**/*IntegrationTest*'
}

task importProducts(type: JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    main = "com.hybris.caas.product.importer.ProductsImporterRunner"

    args System.getProperty("env") == null ? "dev" : System.getProperty("env"),
            System.getProperty("tenant") == null ? "sap" : System.getProperty("tenant")
}

task copyCompiles(type: Copy) {
    from configurations.compile
    into 'dependencies'
}

task copyCompileOnlys(type: Copy) {
    from configurations.compileOnly
    into 'dependencies'
}
task copyTestCompiles(type: Copy) {
    from configurations.testCompile
    into 'dependencies'
}

configurations {
    all*.exclude group: 'org.springframework.security.oauth', module: 'spring-security-oauth2'
}
